<!-- This file can be included in a Content Editor WebPart -->
<!-- import files from document library -->
<script type="text/javascript" src="/sites/0001/Shared Documents/jquery-2.1.4.min.js"></script>
<script type="text/javascript" src="/sites/0001/Shared Documents/sspjs-1.0.4.js"></script>
<script type="text/javascript">
    /// <reference path="jquery-2.1.4.min.js" />
    /// <reference path="sspjs-1.0.4.js" />

    var $scope = {};
    $sspjs.run(function ($sp, $logger) {

        // Overwrite default logging method to
        // send the output to the DOM not to the browsers console
        $logger.log = function (message) {
            $('#output').append('<div>' + message + '</div>');
        }

        // Access SharePoint to get all items from the list called 'Documents'
        var LIST = 'Documents';
        $sp.getListItemsAsObjectsAsync(LIST, ['ID', 'LinkFilename', 'Title']).done(function (items) {

            for (var i = 0; i < items.length; i++) {
                $('#fileList')
                    .append($("<option></option>")
                    .attr("value", items[i].ID)
                    .text(items[i].LinkFilename));
            }

            for (var i = 0; i < items.length; i++) {
                var currentId = items[i].ID;
                var currentName = items[i].LinkFilename
                $('#spList')
                    .append($("<div></div>")
                    .attr("data-id", currentId)
                    .attr("selectable", true)
                    .text(currentName))
                    .append($('<div></div>')
                        .append($('<a href="#">Load versions  </a>')
                            .attr('data-id', currentId)
                            .on('click', function () {
                                $sp.notify('Loading history...');
                                var id = $(this).data('id');
                                var getFileUrl = $sp.getFileUrlAsync(LIST, id);
                                getFileUrl.done(function (url) {
                                    var getHistory = $sp.getFileHistoryAsync(LIST, url);
                                    getHistory.done(function (versions) {
                                        $elem = $("select[data-id='" + id + "']");
                                        $elem.empty();
                                        for (var i = 0; i < versions.length; i++) {
                                            $elem
                                                .append($("<option></option>")
                                                .attr("value", versions[i].get_id())
                                                .text(versions[i].get_versionLabel() + ' (' + versions[i].get_size() + ')'));
                                        }
                                    });
                                    getHistory.fail(function (sender, message, args) {
                                        $logger.log(message);
                                    });
                                });
                                getFileUrl.fail(function (sender, message, args) {
                                    $logger.log(message);
                                });
                            })
                        ).append($('<select></select>')
                            .attr('data-id', currentId))
                    );

            }

        }).fail(function (sender, message, args) {
            $logger.log(message);
        });

        $('#addFileButton').on('click', function () {

            $sp.notify('Uploading...');

            var newFileName = $('#displayName').val();
            var fileNameInput = $('#getFile');
            var fileNameObj = fileNameInput[0];
            var uploadAsync = $sp.uploadFileAsync("Shared Documents", newFileName, fileNameObj);
            uploadAsync.done(function (item, url) {
                $logger.log(item.Id);

                var updateAsync = $sp.updateListItemAsync("Documents", item.Id, { Title: newFileName });
                updateAsync.done(function (item) {
                    $logger.log(item.get_item('Title'));
                    $sp.addStatus({ title: 'Upload complete', message: item.get_item('Title') });
                });
                updateAsync.fail(function (sender, message, args) {
                    $logger.log(message);
                });
            });
            uploadAsync.fail(function (sender, message, args) {
                $logger.log(message);
            });
        });

        $scope.lastId = null;
        $('#addStatusBtn').on('click', function () {
            $sp.notify('Adding status');
            $scope.lastId = $sp.addStatus({ title: 'Added', message: $('#statusText').val(), color: 'green' });
        });

        $('#removeLastBtn').on('click', function () {
            $sp.notify('Removing status');
            $sp.removeStatus($scope.lastId);
        });

        $('#removeAllBtn').on('click', function () {
            $sp.notify('Removing all status');
            $sp.removeAllStatus();
        });

        $('#displayHistoryBtn').on('click', function () {
            $sp.notify('Loading history...');

            var id = $('#fileList option:selected').val();
            var getFileUrl = $sp.getFileUrlAsync('Documents', id);
            getFileUrl.done(function (url) {
                var getHistory = $sp.getFileHistoryAsync('Documents', url);
                getHistory.done(function (versions) {
                    $('#fileHistoryList').empty();
                    for (var i = 0; i < versions.length; i++) {
                        $('#fileHistoryList')
                            .append($("<option></option>")
                            .attr("value", versions[i].get_id())
                            .text(versions[i].get_versionLabel() + ' (' + versions[i].get_size() + ')'));
                    }
                });
                getHistory.fail(function (sender, message, args) {
                    $logger.log(message);
                });
            });
            getFileUrl.fail(function (sender, message, args) {
                $logger.log(message);
            });
        });
    });
</script>


<h2>List</h2>
<div id="spList">

</div>
<br />

<h2>File upload</h2>
<fieldset>
    <input id="getFile" type="file" />
    <input id="displayName" type="text" value="Enter a unique name" />
    <input id="addFileButton" type="button" value="Upload" />
</fieldset>
<br />

<h2>Notifications</h2>
<fieldset>
    <input id="statusText" type="text" />
    <input id="addStatusBtn" type="button" value="Show" />
    <input id="removeLastBtn" type="button" value="Remove last" />
    <input id="removeAllBtn" type="button" value="Remove all" />
</fieldset>
<br />

<h2>Version history</h2>
<fieldset>
    <select id="fileList"></select>
    <input id="displayHistoryBtn" type="button" value="Load History" />
    <select id="fileHistoryList"></select>
</fieldset>
<br />

<h2>Output</h2>
<div id="output"></div>
