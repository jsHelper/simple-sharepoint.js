<!-- This file can be included in a Content Editor WebPart -->
<!-- import files from document library -->
<script type="text/javascript" src="/sites/0001/Shared Documents/jquery-2.1.4.min.js"></script>
<script type="text/javascript" src="/sites/0001/Shared Documents/sspjs-1.1.4.js"></script>
<script type="text/javascript">
    /// <reference path="jquery-2.1.4.min.js" />
    /// <reference path="sspjs-1.1.4.js" />

    var $scope = {};
    $sspjs(function ($sp, $logger) {

        // Overwrite default logging method to
        // send the output to the DOM not to the browsers console
        $logger.log = function (message) {
            $('#output').append('<div>' + message + '</div>');
        }

        // Access SharePoint to get all items from the list called 'Documents'
        var listActions = $sp.list('Documents').init();
        var documentActions = $sp.list('Shared Documents');
        listActions.getItemsAsync({ query: '$select=Id,Title,LinkFilename' }).done(function (items) {

            for (var i = 0; i < items.length; i++) {
                $('#spList')
                    .append($("<tr></tr>")
                        .append($('<td></td>')
                            .text(items[i].Id))
                        .append($('<td></td>')
                            .text(items[i].LinkFilename))
                        .append($('<td></td>')
                            .append($('<input type="button" value="löschen" />')
                                .attr('data-id', items[i].Id)
                                .on('click', function () {
                                    var id = $(this).data('id');
                                    var deleteAsync = listActions.deleteAsync(id);
                                    deleteAsync.done(function () {
                                        $sp.addStatus({ title: 'Deleted', message: id });
                                    });
                                    deleteAsync.fail(function () {
                                        $sp.addStatus({ title: 'Failed', color: 'red', message: id });
                                    });
                                })))
                    .attr("data-id", items[i].Id));
            }

        }).fail(function (sender, message, args) {
            $logger.log(message);
        });

        listActions.getItemAsync(2).done(function (item) {
            $logger.log(item.Id);
        });

        $('#addFileButton').on('click', function () {

            $sp.notify('Uploading...');

            var newFileName = $('#displayName').val();
            var $input = $('#getFile');
            var uploadAsync = documentActions.uploadAsync($input, newFileName);
            uploadAsync.done(function (item, url) {
                $logger.log(item.Id);

                var updateAsync = listActions.updateAsync(item.Id, { Title: newFileName });
                updateAsync.done(function (item) {
                    $sp.addStatus({ title: 'Upload complete', message: newFileName });
                });
                updateAsync.fail(function (sender, message, args) {
                    $logger.log(message);
                });
            });
            uploadAsync.fail(function (sender, message, args) {
                $logger.log(message);
            });
        });

        $scope.lastId = null;
        $('#addStatusBtn').on('click', function () {
            $sp.notify('Adding status');
            $scope.lastId = $sp.addStatus({ title: 'Added', message: $('#statusText').val(), color: 'green' });
        });

        $('#removeLastBtn').on('click', function () {
            $sp.notify('Removing status');
            $sp.removeStatus($scope.lastId);
        });

        $('#removeAllBtn').on('click', function () {
            $sp.notify('Removing all status');
            $sp.removeAllStatus();
        });

        $('#displayHistoryBtn').on('click', function () {
            $sp.notify('Loading history...');

            var id = $('#fileList option:selected').val();
            var getFileUrl = $sp.getFileUrlAsync('Documents', id);
            getFileUrl.done(function (url) {
                var getHistory = $sp.getFileHistoryAsync('Documents', url);
                getHistory.done(function (versions) {
                    $('#fileHistoryList').empty();
                    for (var i = 0; i < versions.length; i++) {
                        $('#fileHistoryList')
                            .append($("<option></option>")
                            .attr("value", versions[i].get_id())
                            .text(versions[i].get_versionLabel() + ' (' + versions[i].get_size() + ')'));
                    }
                });
                getHistory.fail(function (sender, message, args) {
                    $logger.log(message);
                });
            });
            getFileUrl.fail(function (sender, message, args) {
                $logger.log(message);
            });
        });
    });
</script>


<h2>List</h2>
<table id="spList"></table>
<br />

<h2>File upload</h2>
<fieldset>
    <input id="getFile" type="file" />
    <input id="displayName" type="text" value="Enter a unique name" />
    <input id="addFileButton" type="button" value="Upload" />
</fieldset>
<br />

<h2>Notifications</h2>
<fieldset>
    <input id="statusText" type="text" />
    <input id="addStatusBtn" type="button" value="Show" />
    <input id="removeLastBtn" type="button" value="Remove last" />
    <input id="removeAllBtn" type="button" value="Remove all" />
</fieldset>
<br />

<h2>Version history</h2>
<fieldset>
    <select id="fileList"></select>
    <input id="displayHistoryBtn" type="button" value="Load History" />
    <select id="fileHistoryList"></select>
</fieldset>
<br />

<h2>Output</h2>
<div id="output"></div>
